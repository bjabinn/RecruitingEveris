@using RecruitingWeb.Properties

@using Recruiting.Application.Candidaturas.Enums;
@using Recruiting.Application.Maestros.Enums;

@model Recruiting.Application.Candidaturas.ViewModel.CandidaturaViewModel

@{
    var Activo = Model.CandidaturaDatosBasicosViewModel.DatosBasicos.Activo;
    if (Activo == false)
    {
        Response.Redirect("/Shared/Borrado");
    }

    int nSubEntrevistas = (int)HttpContext.Current.Session["NumeroSubEntrevistas"];
    int centroId = (int)HttpContext.Current.Session["CentroIdUsuario"];

}
<div class="row titlePage">
    <div class="col-lg-6">
        <h3>@Resources.HTML_Candidaturas_EditExtend_EditarCandidatura - @Model.CandidaturaDatosBasicosViewModel.DatosBasicos.NombreCandidato</h3>
    </div>
</div>
<div class="row header-flap">
    <div class="btn-group" role="group">
        <a href="@Url.Action("Volver", "Candidaturas")" class="btn btn-default">
            <span class="text">@Resources.HTML_BotonGenericoVolver</span>
        </a>
        <a href="@Url.Action("Details/" +  Model.CandidaturaDatosBasicosViewModel.DatosBasicos.CandidatoId, "Candidatos")" target="_blank" class="btn btn-default">
            <span class="text">@Resources.HTML_Title_VerCandidato</span>
        </a>
        <a href="#" data-action="guardar" class="btn btn-default">
            <span class="text">@Resources.HTML_BotonGenericoGuardar</span>
        </a>
    </div>
    <div class="col-lg-6 removePadding">
        <h4 class="noMargin headerBox">@Resources.HTML_Candidaturas_EditExtend_DatosCandidatura</h4>
    </div>
</div>
@using (Html.BeginForm("EditExtend", "Candidaturas", FormMethod.Post, new Dictionary<string, object> { { "role", "form" }, { "data-parsley-validate", "true" }, { "data-parsley-excluded", ":not([data-validate]) , [disabled]" }, { "enctype", "multipart/form-data" } }))
{
    @Edit.Hidden("guardar", "SubmitType")
    @Edit.Hidden(Model.CandidaturaId, "CandidaturaId")
    @Edit.Hidden(Model.EmailsSeguimiento, "EmailsSeguimiento")

    @Edit.Hidden(Model.CandidaturaDatosBasicosViewModel.DatosBasicos.EtapaCandidaturaId, "EtapaCandidaturaId")
    @Edit.Hidden(Model.CandidaturaDatosBasicosViewModel.DatosBasicos.EstadoCandidaturaId, "EstadoCandidaturaId")

    int etapaCandidaturaId = Model.CandidaturaDatosBasicosViewModel.DatosBasicos.EtapaCandidaturaId;
    int estadoCandidaturaId = Model.CandidaturaDatosBasicosViewModel.DatosBasicos.EstadoCandidaturaId;

    <!--  START  Datos Generales  -->
    @Html.Partial("~/Views/Candidaturas/Partials/Edit/_DatosBasicos.cshtml", Model.CandidaturaDatosBasicosViewModel.DatosBasicos)
    <!--  END  Datos Generales    -->

    if (etapaCandidaturaId != (int)TipoEtapaCandidaturaEnum.Inicio && etapaCandidaturaId != (int)TipoEtapaCandidaturaEnum.FiltradoTecnico
       || estadoCandidaturaId == (int)TipoEstadoCandidaturaEnum.Descartado)
    {
        <!--  START Filtrado CV    -->
        @Html.Partial("~/Views/Candidaturas/Partials/Edit/FiltradoCv/FiltradoCv.cshtml", Model.FiltroCVViewModel)
        <!--  END  Filtrado CV     -->
    }

    if (etapaCandidaturaId != (int)TipoEtapaCandidaturaEnum.Inicio
     && etapaCandidaturaId != (int)TipoEtapaCandidaturaEnum.FiltradoTecnico
     && etapaCandidaturaId != (int)TipoEtapaCandidaturaEnum.AgendarEntrevistas)
    {
        <!--  START Datos 1ª Entrevista   -->  
        @Html.Partial("~/Views/Candidaturas/Partials/Edit/Entrevista/PrimeraEntrevista/CompletarPrimeraEntrevista.cshtml", Model.PrimeraEntrevistaViewModel)
        <!--  END  Datos 1ª Entrevista     -->
    }

    if (etapaCandidaturaId != (int)TipoEtapaCandidaturaEnum.Inicio
    && etapaCandidaturaId != (int)TipoEtapaCandidaturaEnum.FiltradoTecnico
    && etapaCandidaturaId != (int)TipoEtapaCandidaturaEnum.AgendarEntrevistas
    && etapaCandidaturaId != (int)TipoEtapaCandidaturaEnum.FeedbackPrimeraEntrevista
    && etapaCandidaturaId != (int)TipoEtapaCandidaturaEnum.AgendarSegundaEntrevista)
    {
        <!--  START Datos 2ª Entevista<    -->
        if (Model.SegundaEntrevistaViewModel.AgendarSegundaEntrevista != null)
        {            
            @Html.Partial("~/Views/Candidaturas/Partials/Edit/Entrevista/SegundaEntrevista/CompletarSegundaEntrevista.cshtml", Model.SegundaEntrevistaViewModel)
        }       
        <!--  END  Datos 2ª Entevista   -->
    }

    if (etapaCandidaturaId == (int)TipoEtapaCandidaturaEnum.EntregaCartaOferta ||
       etapaCandidaturaId == (int)TipoEtapaCandidaturaEnum.FeedbackCartaOferta ||
       etapaCandidaturaId == (int)TipoEtapaCandidaturaEnum.Fin)
    {
        <!--  START Carta Oferta     -->
        @Html.Partial("~/Views/Candidaturas/Partials/Edit/CartaOferta/CompletarCartaOferta.cshtml", Model.CompletarCartaOfertaViewModel)
        <!--  END  Carta Oferta  -->
    }

    if (estadoCandidaturaId == (int)TipoEstadoCandidaturaEnum.Renuncia)
    {
        @Html.Partial("~/Views/Candidaturas/Partials/Edit/Renuncia/DatosRenuncia.cshtml", Model)
    }

    if ((estadoCandidaturaId == (int)TipoEstadoCandidaturaEnum.Descartado && Model.TipoRenunciaDescarte != null))
    {
        @Html.Partial("~/Views/Candidaturas/Partials/Edit/Descarte/DatosDescarte.cshtml", Model)
    }

}

@Html.Partial("~/Views/Candidaturas/Modal/_ModalBusquedaNecesida.cshtml", Model.CompletarCartaOfertaViewModel.CompletarCartaOferta)
@Html.Partial("~/Views/Candidaturas/Modal/_ModalBusquedaOferta.cshtml")
@Html.Partial("~/Views/Candidaturas/Modal/_ModalCrearEditOfertas.cshtml")

@section scripts{
    @CandidaturasFrontActions.MenuFrontActions()
    @CandidaturasFrontActions.DatosBasicosFrontActions(Url)
    @CandidaturasFrontActions.FiltradoCvPartialFrontActions()
    @CandidaturasFrontActions.AgendarPrimeraEntrevistaPartialFrontActions()
    @CandidaturasFrontActions.CompletarPrimeraEntrevistaPartialFrontActions()
    @CandidaturasFrontActions.AgendarSegundaEntrevistaPartialFrontActions()
    @CandidaturasFrontActions.CompletarSegundaEntrevistaPartialFrontActions()
    @CandidaturasFrontActions.CompletarCartaOfertaPartialFrontActions(Url)
    @CandidaturasFrontActions.EditExtendFrontActions(Url, Model)

    <script type="text/javascript">
        $(document).ready(function () {
            if ($('#MotivoRechazoId').length > 0) {
                $('#MotivoRechazoId').removeAttr('data-validate');
                $('#MotivoRechazoId').removeAttr('required');
                $('#MotivoRechazoId').removeAttr('data-parsley-id');
                $('#MotivoRechazoId').prop('required', false);
            }
        });
    </script>
}

